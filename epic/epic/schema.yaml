openapi: 3.0.2
info:
  title: EPIC API
  version: ''
paths:
  /api/customer/:
    get:
      operationId: listCustomers
      description: Return the list of customers
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - customer
      - crm
    post:
      operationId: createCustomer
      description: add a customer.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - customer
      - crm
  /api/customer/{id}/:
    get:
      operationId: retrieveCustomer
      description: Return a customer .
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - customer
      - crm
    put:
      operationId: updateCustomer
      description: update a customer
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - customer
      - crm
    patch:
      operationId: partialUpdateCustomer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - customer
      - crm
    delete:
      operationId: destroyCustomer
      description: delete a customer
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: last_name
        required: false
        in: query
        description: last_name
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - customer
      - crm
  /api/contract/:
    get:
      operationId: listContracts
      description: Return the list of contracts
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: date_created
        required: false
        in: query
        description: date_created
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: date_created__gte
        required: false
        in: query
        description: date_created__gte
        schema:
          type: string
      - name: date_created__lte
        required: false
        in: query
        description: date_created__lte
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/contract'
          description: ''
      tags:
      - contract
      - crm
    post:
      operationId: createContract
      description: add a contract.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/contract'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
          description: ''
      tags:
      - contract
      - crm
  /api/contract/{id}/:
    get:
      operationId: retrieveContract
      description: Return a contract .
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: date_created
        required: false
        in: query
        description: date_created
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: date_created__gte
        required: false
        in: query
        description: date_created__gte
        schema:
          type: string
      - name: date_created__lte
        required: false
        in: query
        description: date_created__lte
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
          description: ''
      tags:
      - contract
      - crm
    put:
      operationId: updateContract
      description: update a contract
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: date_created
        required: false
        in: query
        description: date_created
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: date_created__gte
        required: false
        in: query
        description: date_created__gte
        schema:
          type: string
      - name: date_created__lte
        required: false
        in: query
        description: date_created__lte
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/contract'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
          description: ''
      tags:
      - contract
      - crm
    patch:
      operationId: partialUpdateContract
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: date_created
        required: false
        in: query
        description: date_created
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: date_created__gte
        required: false
        in: query
        description: date_created__gte
        schema:
          type: string
      - name: date_created__lte
        required: false
        in: query
        description: date_created__lte
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/contract'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
          description: ''
      tags:
      - contract
      - crm
    delete:
      operationId: destroyContract
      description: delete a contract
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: date_created
        required: false
        in: query
        description: date_created
        schema:
          type: string
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: date_created__gte
        required: false
        in: query
        description: date_created__gte
        schema:
          type: string
      - name: date_created__lte
        required: false
        in: query
        description: date_created__lte
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - contract
      - crm
  /api/event/:
    get:
      operationId: listevents
      description: Return the list of events
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: event_date
        required: false
        in: query
        description: event_date
        schema:
          type: string
      - name: event_date__gte
        required: false
        in: query
        description: event_date__gte
        schema:
          type: string
      - name: event_date__lte
        required: false
        in: query
        description: event_date__lte
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/event'
          description: ''
      tags:
      - event
      - crm
    post:
      operationId: createevent
      description: add an event.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/event'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: ''
      tags:
      - event
      - crm
  /api/event/{id}/:
    get:
      operationId: retrieveevent
      description: Return an event.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: event_date
        required: false
        in: query
        description: event_date
        schema:
          type: string
      - name: event_date__gte
        required: false
        in: query
        description: event_date__gte
        schema:
          type: string
      - name: event_date__lte
        required: false
        in: query
        description: event_date__lte
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: ''
      tags:
      - event
      - crm
    put:
      operationId: updateevent
      description: update an event.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: event_date
        required: false
        in: query
        description: event_date
        schema:
          type: string
      - name: event_date__gte
        required: false
        in: query
        description: event_date__gte
        schema:
          type: string
      - name: event_date__lte
        required: false
        in: query
        description: event_date__lte
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: ''
      tags:
      - event
      - crm
    patch:
      operationId: partialUpdateevent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: event_date
        required: false
        in: query
        description: event_date
        schema:
          type: string
      - name: event_date__gte
        required: false
        in: query
        description: event_date__gte
        schema:
          type: string
      - name: event_date__lte
        required: false
        in: query
        description: event_date__lte
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: ''
      tags:
      - event
      - crm
    delete:
      operationId: destroyevent
      description: delete an event.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: customer__last_name
        required: false
        in: query
        description: customer__last_name
        schema:
          type: string
      - name: customer__email
        required: false
        in: query
        description: customer__email
        schema:
          type: string
      - name: event_date
        required: false
        in: query
        description: event_date
        schema:
          type: string
      - name: event_date__gte
        required: false
        in: query
        description: event_date__gte
        schema:
          type: string
      - name: event_date__lte
        required: false
        in: query
        description: event_date__lte
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - event
      - crm
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/login/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          description: customer's firstname
          maxLength: 25
        last_name:
          type: string
          description: customer's lastname
          maxLength: 25
        sales_contact:
          type: string
        email:
          type: string
          nullable: true
          description: customer's email
          maxLength: 100
      required:
      - first_name
      - last_name
      - sales_contact
    contract:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          type: integer
          description: contract's customer
        sales_contact:
          type: string
        customer_lastname:
          type: string
          readOnly: true
        status:
          enum:
          - S
          - QS
          - P
          type: string
          description: This field is used to categorize the project. Use, S=>Sign,
            QS=>Quote sent, P=>In progress
        status_name:
          type: string
          readOnly: true
        amount:
          type: number
          description: contract's amount
        payment_due:
          type: string
          format: date-time
          nullable: true
          description: contract's paiement due date
      required:
      - customer
      - sales_contact
    event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        support_contact:
          type: string
        customer__last_name:
          type: string
          readOnly: true
        customer__email:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        attendees:
          type: integer
          maximum: 2147483647
          description: event's number of attendees
          minimum: 0
        event_date:
          type: string
          format: date-time
          nullable: true
          description: event's date
      required:
      - support_contact
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
